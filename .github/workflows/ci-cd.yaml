name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          if [ -f tests/test.py ]; then python tests/test.py; fi

  docker-push:
    needs: build-test
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: api
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/demand-api:latest

      - name: Build and push Dashboard image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: dashboard
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/demand-dashboard:latest

  deploy-gke:
    needs: docker-push
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Update API image in deployment
        run: |
          sed -i 's|<YOUR_API_IMAGE>|${{ env.DOCKERHUB_USERNAME }}/demand-api:latest|' k8s/api-deployment.yaml
      - name: Update Dashboard image in deployment
        run: |
          sed -i 's|<YOUR_DASHBOARD_IMAGE>|${{ env.DOCKERHUB_USERNAME }}/demand-dashboard:latest|' k8s/dashboard-deployment.yaml

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/
